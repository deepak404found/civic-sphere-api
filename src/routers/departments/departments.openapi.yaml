paths:
  /departments/{id}:
    get:
      tags:
        - Department
      summary: Get Department details by ID
      operationId: GetDepartmentById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Department ID
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Department fetched successfully"
                  payload:
                    $ref: "#/components/schemas/Department"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    patch:
      tags:
        - Department
      summary: Update Department details by ID
      operationId: UpdateDepartmentById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Department ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "raipur"
                  default: "raipur"
                  description: Name of the department
                email:
                  type: string
                  example: "sample@mail.com"
                  default: "sample@mail.com"
                  description: Email of the department
                city:
                  type: string
                  example: "raipur"
                  default: "raipur"
                  description: City of the department
                state:
                  type: string
                  example: "Chhattisgarh"
                  default: "Chhattisgar"
                  description: State of the department
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Department updated successfully"
                  payload:
                    $ref: "#/components/schemas/Department"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
    delete:
      tags:
        - Department
      summary: Delete Department by ID
      operationId: DeleteDepartmentById
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Department ID
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Department deleted successfully"
                  payload:
                    $ref: "#/components/schemas/Department"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"

  /departments:
    get:
      tags:
        - Department
      summary: Get Departments list
      operationId: GetDepartments
      parameters:
        - in: query
          name: skip
          schema:
            type: integer
            minimum: 0
            default: 0
          description: Number of items to skip
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            default: 10
          description: Number of items to return
        - in: query
          name: search
          schema:
            type: string
          description: Search query
        - in: query
          name: sortBy
          schema:
            type: string
          description: Field to sort by
        - in: query
          name: sortOrder
          schema:
            type: string
            enum:
              - asc
              - desc
            default: asc
          description: Sort order
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Departments fetched successfully"
                  payload:
                    type: object
                    properties:
                      departments:
                        type: array
                        items:
                          $ref: "#/components/schemas/Department"
                      total:
                        type: integer
                        example: 1
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"

  /departments/add:
    put:
      tags:
        - Department
      summary: Add Department
      operationId: AddDepartment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "raipur"
                  default: "raipur"
                  description: Name of the department
                  required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Department added successfully"
                  payload:
                    $ref: "#/components/schemas/Department"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestError"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"

components:
  schemas:
    Department:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the department
          example: "123e4567-e89b-12d3-a456-426614174000"
        name:
          type: string
          description: Name of the department
          example: "raipur"
        createdAt:
          type: string
          format: date-time
          description: Date of creation
          example: "2021-08-10T09:00:00Z"
        email:
          type: string
          description: Email of the department
          example: "sample@mail.com"
        city:
          type: string
          description: City of the department
          example: "raipur"
        state:
          type: string
          description: State of the department
          example: "Chhattisgarh"
      required:
        - id
        - name
        - createdAt
